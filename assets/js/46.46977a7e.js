(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{401:function(v,_,t){"use strict";t.r(_);var s=t(16),r=Object(s.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"rust基础部分的学习总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#rust基础部分的学习总结"}},[v._v("#")]),v._v(" Rust基础部分的学习总结")]),v._v(" "),_("p",[v._v("Rust 的学习过程有点像「打地基」。一开始可能感觉概念繁多，但走到这里，我们已经把最重要的砖块都搬上来了。这一章，就来对基础部分做一个总结，让整个知识体系在脑子里清晰起来。")]),v._v(" "),_("hr"),v._v(" "),_("h2",{attrs:{id:"一、rust-的核心设计理念"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一、rust-的核心设计理念"}},[v._v("#")]),v._v(" 一、Rust 的核心设计理念")]),v._v(" "),_("p",[v._v("Rust 和 C++ 一样，定位是 "),_("strong",[v._v("系统级语言")]),v._v("，但它最大的特点是：")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("所有权 (Ownership)")])]),v._v(" "),_("li",[_("strong",[v._v("借用 (Borrowing)")])]),v._v(" "),_("li",[_("strong",[v._v("生命周期 (Lifetime)")])])]),v._v(" "),_("p",[v._v("这三样东西保证了 "),_("strong",[v._v("内存安全")]),v._v("，同时又能保持高性能。换句话说，Rust 的学习核心就是搞懂内存管理背后的规则。")]),v._v(" "),_("hr"),v._v(" "),_("h2",{attrs:{id:"二、基础语法的构建"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二、基础语法的构建"}},[v._v("#")]),v._v(" 二、基础语法的构建")]),v._v(" "),_("p",[v._v("Rust 的前半部分主要是语言层面的基本工具：")]),v._v(" "),_("ol",[_("li",[_("strong",[v._v("变量与可变性")]),v._v("：默认不可变，强调安全。")]),v._v(" "),_("li",[_("strong",[v._v("函数与表达式")]),v._v("：一切皆表达式，返回值灵活。")]),v._v(" "),_("li",[_("strong",[v._v("控制流")]),v._v("：if / loop / while / for，和其他语言类似。")]),v._v(" "),_("li",[_("strong",[v._v("数据类型")]),v._v("：标量（整数、浮点、布尔、字符）+ 复合类型（tuple、array）。")])]),v._v(" "),_("p",[v._v("到这一步，Rust 和 C、C++、Python 没太大差别，还算友好。")]),v._v(" "),_("hr"),v._v(" "),_("h2",{attrs:{id:"三、内存与所有权"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三、内存与所有权"}},[v._v("#")]),v._v(" 三、内存与所有权")]),v._v(" "),_("p",[v._v("Rust 的杀手锏：")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("所有权")]),v._v("：每块内存有且只有一个所有者。")]),v._v(" "),_("li",[_("strong",[v._v("借用")]),v._v("：可以引用但不能乱改，分为 "),_("code",[v._v("&T")]),v._v("（不可变借用）和 "),_("code",[v._v("&mut T")]),v._v("（可变借用）。")]),v._v(" "),_("li",[_("strong",[v._v("切片 (slice)")]),v._v("：在不复制的情况下获取数组或字符串的一部分。")])]),v._v(" "),_("p",[v._v("这是 Rust 入门的 "),_("strong",[v._v("第一道坎")]),v._v("。不过只要理解了「谁拥有，谁负责释放」，事情就简单了。")]),v._v(" "),_("hr"),v._v(" "),_("h2",{attrs:{id:"四、结构化数据"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#四、结构化数据"}},[v._v("#")]),v._v(" 四、结构化数据")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("结构体 (struct)")]),v._v("：自定义数据类型，像 C 的 struct，但更强大。")]),v._v(" "),_("li",[_("strong",[v._v("枚举 (enum)")]),v._v("：不仅能表示有限状态，还能绑定数据，配合 "),_("code",[v._v("Option")]),v._v(" 特别常用。")]),v._v(" "),_("li",[_("strong",[v._v("方法 (impl)")]),v._v("：给 struct / enum 添加行为，和面向对象有点类似。")])]),v._v(" "),_("p",[v._v("这部分是 Rust 的 "),_("strong",[v._v("抽象能力")]),v._v("，让你能写出清晰的模型，而不仅仅是函数堆砌。")]),v._v(" "),_("hr"),v._v(" "),_("h2",{attrs:{id:"五、控制流的进阶"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#五、控制流的进阶"}},[v._v("#")]),v._v(" 五、控制流的进阶")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("match")]),v._v("：强大的模式匹配，能安全地覆盖所有可能情况。")]),v._v(" "),_("li",[_("strong",[v._v("if let")]),v._v("：match 的简化版，常用于处理 "),_("code",[v._v("Option")]),v._v(" 或 "),_("code",[v._v("Result")]),v._v("。")])]),v._v(" "),_("p",[v._v("Rust 的控制流强调「穷举」和「显式」，避免遗漏，提升可靠性。")]),v._v(" "),_("hr"),v._v(" "),_("h2",{attrs:{id:"六、项目与模块化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#六、项目与模块化"}},[v._v("#")]),v._v(" 六、项目与模块化")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("Package / Crate")]),v._v("：Rust 的编译单元，Cargo 工具管理。")]),v._v(" "),_("li",[_("strong",[v._v("模块 (mod)")]),v._v("：代码组织方式，控制作用域和可见性。")]),v._v(" "),_("li",[_("strong",[v._v("use / pub")]),v._v("：路径引入和可见性控制。")]),v._v(" "),_("li",[_("strong",[v._v("多文件模块")]),v._v("：工程化项目必备。")])]),v._v(" "),_("p",[v._v("这让 Rust 项目能自然扩展，从小脚本到大型系统都能 hold 住。")]),v._v(" "),_("hr"),v._v(" "),_("h2",{attrs:{id:"七、常用集合"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#七、常用集合"}},[v._v("#")]),v._v(" 七、常用集合")]),v._v(" "),_("p",[v._v("Rust 标准库提供了常见的数据容器：")]),v._v(" "),_("ol",[_("li",[_("strong",[v._v("Vec"),_("T")],1),v._v("：动态数组，最常用。")]),v._v(" "),_("li",[_("strong",[v._v("String")]),v._v("：UTF-8 可变字符串，本质上也是字节向量。")]),v._v(" "),_("li",[_("strong",[v._v("HashMap<K, V>")]),v._v("：键值对存储。")])]),v._v(" "),_("p",[v._v("这三样几乎能覆盖大多数日常编程需求。")])])}),[],!1,null,null,null);_.default=r.exports}}]);